from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db import get_db_session, register_user, User

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@router.message(Command("start"))
async def start_handler(message: Message):
    session = get_db_session()
    user = session.query(User).filter_by(telegram_id=message.from_user.id).first()

    if user:
        await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.full_name}!")
        await show_main_menu(message)
    else:
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–§–ò–û –∏ –≥—Ä—É–ø–ø—É</b> –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á 21-–°–ü–û-–ò–°–∏–ü-02</i>"
        )
    session.close()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –§–ò–û –∏ –≥—Ä—É–ø–ø—ã
@router.message(F.text.regexp(r'^[–ê-–Ø–Å–∞-—è—ë-]+\s[–ê-–Ø–Å–∞-—è—ë-]+\s[–ê-–Ø–Å–∞-—è—ë-]+\s[\d–ê-–Ø–Å–∞-—è—ë-]+$'))
async def register_user_handler(message: Message):
    parts = message.text.split()
    if len(parts) < 4:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –§–ò–û –∏ –≥—Ä—É–ø–ø—É.\n\n–ü—Ä–∏–º–µ—Ä:\n<b>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á 21-–°–ü–û-–ò–°–∏–ü-02</b>")
        return

    full_name = " ".join(parts[:3])
    group_name = " ".join(parts[3:])

    if register_user(message.from_user.id, full_name, group_name):
        await message.answer(
            f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n"
            f"–§–ò–û: {full_name}\n"
            f"–ì—Ä—É–ø–ø–∞: {group_name}"
        )
        await show_main_menu(message)
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
async def show_main_menu(message: Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="delete_account")
    await message.answer("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=builder.as_markup())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
@router.callback_query(F.data == "delete_account")
async def confirm_delete(callback: CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_delete")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
    await callback.message.edit_text("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?", reply_markup=builder.as_markup())

# –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.callback_query(F.data == "cancel_delete")
async def cancel_delete(callback: CallbackQuery):
    await callback.message.edit_text("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await show_main_menu(callback.message)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è ‚Äî —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
@router.callback_query(F.data == "confirm_delete")
async def delete_user(callback: CallbackQuery):
    session = get_db_session()
    user = session.query(User).filter_by(telegram_id=callback.from_user.id).first()

    if user:
        session.delete(user)
        session.commit()
        await callback.message.edit_text("‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —É–¥–∞–ª—ë–Ω.")
    else:
        await callback.message.edit_text("‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    session.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ router –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–æ—Ç–µ
def register(dp):
    dp.include_router(router)
